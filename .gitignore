# Создано https://www.toptal.com/developers/gitignore/api/csharp , против
# Редактировать в https://www.toptal.com/developers/gitignore?templates=csharp , против

### Csharp ###
## Игнорировать временные файлы Visual Studio, результаты сборки и
## файлы, созданные популярными дополнениями Visual Studio.
##
## Получить последнюю информацию от https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# Пользовательские файлы
* .rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# Пользовательские файлы (MonoDevelop / Xamarin Studio)
*.пользовательские настройки

# Mono автоматически генерируемые файлы
mono_crash.*

# Результаты построения
[Dd]ebug/
[Dd]ebugPublic/
[Rr]элиз/
[Rr]элеазы/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr] [Мм]/
[Aa][Rr] [Мм]64/
блд/
[Bb]в/
[Оо]би джей/
[Ll]ог/
[Ll]ogs/

# Visual Studio 2015/2017 каталог кэша / параметров
.vs/
# Раскомментируйте, если у вас есть задачи, которые создают статические файлы проекта в wwwroot
#wwwroot/

# Автоматически создаваемые файлы Visual Studio 2017
Сгенерированные\ Файлы/

# Результаты теста MSTest
[Tt] есть[Rr] результат*/
[Bb] уилд[Лл]ог.*

# НУнит
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Результаты построения ATL-проекта
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Контрольные результаты
Бенчмаркдотнет.Артефакты/

# .NET Core
project.lock.json
артефакты project.fragment.lock.json
/

# ASP.NET Строительные леса
ScaffoldingReadMe.txt

# Стильная одежда
StyleCopReport.xml

# Файлы, созданные Visual Studio
*_i.c
* _p.c
* _h.h
* .ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.пгд
*.рсп
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.сборки
*.pidb
* .svclog
*.scc

 Тестовые файлы # Chutzpah
_чуцпа*

# Файлы кэша Visual C++ ipch
/
*.aps
*.ncb
* .opendb
*.opensdf

*.sdf
*.кэш-файл * .VC.db
*.VC.VC.opendb

# Профилировщик Visual Studio
*.psess
*.vsp
*.vspx
*.sap

# Файлы трассировки Visual Studio
* .e2e

# Локальное рабочее пространство TFS 2012
$tf/

# Инструментарий автоматизации
управления *.gpState

# ReSharper - это надстройка для кодирования .NET
_ Резчик*/
*.[Rr]e[Ss]харпер
*.Настройки точек.пользователь

# TeamCity - это надстройка для сборки
_TeamCity ( командный город)*

# dotCover - это инструмент покрытия кода
* .dotCover

# AxoCover - это инструмент покрытия кода
.axoCover/*
!.axoCover/настройки.json

# Coverlet - это бесплатный кроссплатформенный инструмент для покрытия кода
покрытие * .json
покрытие * .xml
покрытие *.info

# Результаты покрытия кода Visual Studio
*.покрытие
*.coveragexml

# NCrunch
_нхруст_*
.*хруст*.local.xml
nCrunchTemp_*

# MightyMoose
*.мм.*
AutoTest.Net/

# Веб-верстак (sass)
.sass-кэш/

# Выходная папка Installshield
[Ee]xpress/

# DocProject - это надстройка генератора документации
DocProject/buildhelp/
DocProject/Справка/*.HxT
DocProject/Справка/*.HxC
DocProject/Справка/*.hhc
DocProject/Справка/*.hhk
DocProject/Справка/*.hhp
DocProject/Справка/Html2
DocProject/Справка/html

# Публикация каталога одним щелчком мыши
/

# Опубликовать веб-вывод
*.[Pp]ublish.xml
*.azurePubxml
# Примечание: Прокомментируйте следующую строку, если вы хотите проверить настройки веб-развертывания,
# но строки подключения к базе данных (с потенциальными паролями) будут незашифрованными
*.pubxml
*.опубликовать проект

# Параметры публикации веб-приложения Microsoft Azure. Прокомментируйте следующую строку, если вы хотите
# проверка параметров публикации веб-приложения Azure, но конфиденциальная информация, содержащаяся
# в этих скриптах будут незашифрованы
Публикации скриптов/

# Пакеты NuGet
*.nupkg
 Пакеты символов # NuGet
*.snupkg
# Папка пакетов может быть проигнорирована из-за восстановления пакета
**/[Pp]запасы/*
# кроме build/ , который используется в качестве целевого объекта MSBuild.
!**/[Pp]аккаунты/сборка/
# Раскомментировать при необходимости, однако, как правило, он будет восстановлен при необходимости
#!**/[Pp]учетные записи/репозитории.config
# Файлы project.json NuGet v3 создают больше игнорируемых файлов
* .nuget.props
*.nuget.targets

# Вывод csx сборки Microsoft Azure
/
*.build.csdef *.build.csdef

# ecf эмулятора Microsoft Azure
/
ркп ( б )/

# Каталоги и файлы пакетов приложений магазина Windows
Пакеты приложений/
BundleАртифакты/
Посылка.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Файлы кэша Visual Studio
# файлы, заканчивающиеся на .cache, можно игнорировать
*.[Cc]ache
# но следите за каталогами, заканчивающимися на .cache
!?*.[Cc]ache/

# Другие
Клиентская корзина/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.пфх
*.публикация
настроек orleans.codegen.cs

# Включение файлов со строгими именами может представлять угрозу безопасности
# (https://github.com/github/gitignore/pull/2483#issue-259490424 )
#*.снк

# Поскольку существует несколько рабочих процессов, раскомментируйте следующую строку, чтобы игнорировать bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622 )
#bower_компоненты/

# RIA/Проекты Silverlight
Сгенерированный код/

# Резервное копирование и создание отчетов о файлах после преобразования старого файла проекта
# к более новой версии Visual Studio. Резервные копии файлов не нужны,
# потому что у нас есть git ;-)
_преобразование_порт_файлы/
Резервное копирование*/
Журнал обновления*.XML
Список обновлений*.htm
Резервное копирование ServiceFabricBackup/
*.rptproj.bak

# Файлы SQL Server
* .mdf
*.ldf
*.ndf

# Проекты бизнес-аналитики
* .rdl.данные
* .bim.макет
*.bim_*.настройки
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Подделки Microsoft
Поддельные сборки/

 Файл настроек плагина # GhostDoc
*.GhostDoc.xml

# Node.js Инструменты для Visual Studio
.ntvs_analysis.dat
node_modules/

# Журнал сборки Visual Studio 6
* .plg

# Файл параметров рабочей области Visual Studio 6
*.opt

# Автоматически сгенерированный файл рабочей области Visual Studio 6 (содержит, какие файлы были открыты и т.д.)
*.vbw

# Автоматически сгенерированный файл проекта Visual Studio 6 (содержит, какие файлы были открыты и т.д.)
*.vbp

# Рабочая область Visual Studio 6 и файл проекта (рабочие файлы проекта, содержащие файлы для включения в проект)
*.dsw
*.dsp

# Технические файлы Visual Studio 6

# Visual Studio LightSwitch вывод сборки
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Сервер/Сгенерированные артефакты
**/*.Server/ModelManifest.xml
_Pvt_Расширения

# Менеджер зависимостей пакетов
.paket/paket.exe
пакет-файлы/

# ПОДДЕЛКА - F# Make
.подделка/

# Личные настройки CodeRush
.cr/личный

# Инструменты Python для Visual Studio (PTVS)
__пикеш__/
*.pyc

# Торт - Раскомментируйте, если вы его используете
# инструменты/**
# !инструменты/packages.config

# Студия вкладок
*.tss

# Конфигурационный файл JustMock от Telerik
*.jmconfig

# Вывод сборки BizTalk
* .btp.cs
* .btm.cs
* .odx.cs
* .xsd.cs

# Результаты анализа пользовательского интерфейса OpenCover
Открытая обложка/

# Вывод локального запуска Azure Stream Analytics
ASALocalRun/

# Двоичный и структурированный журнал MSBuild
*.binlog

# Конфигурационный файл отладчика графического процессора NVidia Nsight
* .nvuser

# MFractors (инструмент повышения производительности Xamarin) рабочая папка
.mfractor/

# Локальная история для Visual Studio
.местная история/

# Файлы истории Visual Studio (VSHistory)
.vshistory/

# BeatPulse проверка работоспособности временной базы
данных healthchecksdb

# Папка резервного копирования для инструмента преобразования ссылок на пакеты в Visual Studio 2017
Резервное копирование миграции/

# Ionide (кроссплатформенный F # VS Code tools) рабочая папка
.ionide/

# Fody - автоматически сгенерированная XML-схема
FodyWeavers.xsd

# Файлы VS Code для тех, кто работает с несколькими инструментами
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-рабочее пространство

# Локальная история для Visual Studio Code
.history/
.idea/
obj/

# Файлы установщика Windows из выходных данных сборки
*.кабина
*.msi
*.msix
*.msm
*.msp

# Гонщик JetBrains
*.sln.iml

### против ###
## Получить последнюю информацию от https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# Пользовательские файлы

# Пользовательские файлы (MonoDevelop / Xamarin Studio)

# Mono автоматически генерируемые файлы

# Результаты построения

# Visual Studio 2015/2017 каталог кэша / параметров
# Раскомментируйте, если у вас есть задачи, которые создают статические файлы проекта в wwwroot

# Автоматически создаваемые файлы Visual Studio 2017

# Результаты теста MSTest

# НУнит

# Результаты построения ATL-проекта

# Контрольные результаты

# Ядро .NET

# Стильная одежда

# Файлы, созданные Visual Studio

 Тестовые файлы # Chutzpah

# Файлы кэша Visual C++

# Профилировщик Visual Studio

# Файлы трассировки Visual Studio

# Локальное рабочее пространство TFS 2012

# Инструментарий автоматизации руководства

# ReSharper - это надстройка для кодирования .NET

# TeamCity - это надстройка для сборки

# dotCover - это инструмент покрытия кода

# AxoCover - это инструмент покрытия кода

# Coverlet - это бесплатный кроссплатформенный инструмент для покрытия кода
coverage*[.json, .xml, .info]

# Результаты покрытия кода Visual Studio

# NCrunch

# Могучий выбор

# Веб-верстак (sass)

# Выходная папка Installshield

# DocProject - это надстройка генератора документации

# Каталог с одним щелчком мыши

# Публикация веб-результатов
# Примечание: Прокомментируйте следующую строку, если вы хотите проверить настройки веб-развертывания,
# но строки подключения к базе данных (с потенциальными паролями) будут незашифрованными

# Параметры публикации веб-приложения Microsoft Azure. Прокомментируйте следующую строку, если вы хотите
# проверка параметров публикации веб-приложения Azure, но конфиденциальная информация, содержащаяся
# в этих скриптах будут незашифрованы

# Пакеты NuGet
 Пакеты символов # NuGet
# Папка пакетов может быть проигнорирована из-за восстановления пакета
# кроме build/ , который используется в качестве целевого объекта MSBuild.
# Раскомментировать при необходимости, однако, как правило, он будет восстановлен при необходимости
 Файлы project.json # NuGet v3 создают больше игнорируемых файлов

# Выходные данные сборки Microsoft Azure

# Эмулятор Microsoft Azure

# Каталоги и файлы пакетов приложений магазина Windows

# Файлы кэша Visual Studio
# файлы, заканчивающиеся на .cache, могут быть проигнорированы
# но следите за каталогами, заканчивающимися на .cache

# Другие

# Включение файлов со строгими именами может представлять угрозу безопасности
# (https://github.com/github/gitignore/pull/2483#issue-259490424 )

# Поскольку существует несколько рабочих процессов, раскомментируйте следующую строку, чтобы игнорировать bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622 )

# RIA/Проекты Silverlight

# Резервное копирование и создание отчетов о файлах после преобразования старого файла проекта
# к более новой версии Visual Studio. Резервные копии файлов не нужны,
# потому что у нас есть git ;-)

# Файлы SQL Server

# Проекты бизнес-аналитики

# Подделки Microsoft

 Файл настройки плагина # GhostDoc

# Node.js Инструменты для Visual Studio

# Журнал сборки Visual Studio 6

# Файл параметров рабочей области Visual Studio 6

# Автоматически сгенерированный файл рабочей области Visual Studio 6 (содержит, какие файлы были открыты и т.д.)

# Выходные данные сборки Visual Studio LightSwitch

# Менеджер зависимостей пакетов

# ПОДДЕЛКА - F# Сделать

# Личные настройки CodeRush

# Инструменты Python для Visual Studio (PTVS)

# Торт - Раскомментируйте, если вы его используете
# инструменты/**
# !инструменты/packages.config

# Студия вкладок

# Конфигурационный файл JustMock от Telerik

# Вывод сборки BizTalk

# Результаты анализа пользовательского интерфейса OpenCover

# Вывод локального запуска Azure Stream Analytics

# Двоичный и структурированный журнал MSBuild

# Конфигурационный файл отладчика графического процессора NVidia Nsight

 Рабочая папка # MFractors (инструмент повышения производительности Xamarin)

# Локальная история для Visual Studio

# Временная база данных BeatPulse healthcheck

# Папка резервного копирования для инструмента преобразования ссылок на пакеты в Visual Studio 2017

# Ionide (кросс-платформенный F # VS Code tools) рабочая папка

# Конец https://www.toptal.com/developers/gitignore/api/csharp , против
Оригинальный текст: # User-specific files *.rsuser *.suo *.user *.userosscache *.sln.docstates
